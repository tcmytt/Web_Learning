1. Tổng quan Bootstrap 4.1
Bootstrap - CSS Framework tạo bởi Twitter
Sử dụng CDN (Content Delivery Network) hoặc bằng cách tải Bootstrap về và tích hợp trực tiếp vào dự án.

Đoạn mã cơ bản tích hợp Bootstrap vào trang (HTML)
<link rel="stylesheet" href="css/bootstrap.min.css" />
<script src="js/bootstrap.min.js"></script>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>

CDN
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">

2. Xây dựng Layout cơ bản với Bootstrap
- class xây dựng hàng và cột : 
breakpoint	sm md lg xl
.container	Lớp tạo phần tử chứa layout
.row	Lớp tạo hàng của lưới
.col	Lớp tạo cột của lưới
.col-*	* = (1 - 12), lớp tạo cột có độ rộng cụ thể như .col-1, .col-2 ... hiệu lực cho tất cả các breakpoint
.col-{breakpoint}-*	* = (1 - 12) Lớp tạo cột có độ rộng cụ thể như .col-sm-1, .col-lg-2 ... hiệu lực với breakpoint cụ thể
.col-{breakpoint}-auto .col-auto	Cột có độ rộng điều chỉnh theo nội dung nó chứa
.align-items{-breakpoint}-*	Thiết lập thuộc tính align-items của flexbox
.align-content{-breakpoint}-*	Thiết lập thuộc tính justify-content của flexbox
.justify-content{-breakpoint}-*	Thiết lập thuộc tính align-content của flexbox
.align-self{-breakpoint}-*	Thiết lập thuộc tính align-self của flexbox

- Phần tử chứa để xây dựng bố cục layout - các breakpoint
Trong Bootstrap phần tử gốc cơ bản để xây dựng layout là class container và container-fluid.
Container chia theo các điểm dừng, đó là các breakpoint : sm, md, lg, xl
Trong trường hợp sử dụng container-fluid thì hộp layout tạo ra luôn mở rộng tối đa có thể dù trên loại màn hình nào.

- Chia hàng thành nhiều cột với .col
Lưới layout được tạo ra từ class .row, trong hàng các phần tử con tạo thành cột (hàng) bằng cách sử dụng class có tiền tố là .col-, .col-sm-, .col-md-, .col-lg-, .col-xl-
Khoảng cách giữa các cột là 30px (15px mỗi bên), nếu muốn thiết lập về 0 sử dụng thêm lớp .
Class .col, .col-1 ... .col-12 có hiệu lực đối với tất cả các breakpoint

- Độ rộng các cột căn cứ theo nội dung của cột
Nếu phần tử cột nào đó muốn trở lại điều chỉnh độ rộng theo nội dung thì sử dụng các class col-{breakpoint}-auto: như .col-auto, .col-sm-auto ...

- Pha trộn nhiều breakpoint cho cột
<div class="col-sm-6 col-md-3 bg-danger">
    Cột 1
</div>

- Align các cột
Do .row sử dụng kỹ thuật flexbox nên có thể căn chỉnh các cột trong nó căn về phía nào đó mong muốn của hàng giống như trình bày trong phần flexbox
.align-items{-breakpoint}-{start|end|center|baseline|stretch}
.align-content{-breakpoint}-{start|end|center|beween|around|stretch}
.justify-content{-breakpoint}-{start|end|center|beween|around}

- Align riêng từng cột
.align-self{-breakpoint}-{auto|start|end|center|baseline|stretch}

3. Các tiện ích CSS cơ bản của Bootstrap
- theme-colors : primary, secondary, success, info, warning, danger, light, dark .
Dùng với các tiền tố text, bg, btn...
VD : text-danger, bg-success, btn-success ...

- Các tiện tích trình bày Text :
.text-{breakpoint}-{left|right|center} : Đó là các lớp để căn lề trái, phải, giữa của dòng chữ (.text-right, .text-md-center ...)
.text-monospace : class thiết lập chữ hiện thị ở font monospace
.text-justify : dãn đều dòng chữ
.text-nowrap : Thiết lập dòng chữ không có chế độ wrap (không ngắt dòng)
.text-truncate : Cắt chữ khi vượt quá chiều dài dòng
.text-lowercase :Chuyển thành chữ thường
.text-uppercase : Chuyển thành chữ in hoa
.text-capitalize : In hoa ký tự đầu
.font-weight-(light|normal|bold) : Thiết lập chữ mỏng (font-weight-light), bình thường (font-weight-normal), đậm
.font-italic : Chữ nghiêng
.text-hide ẩn text, decoration-none hủy hiệu ứng trang trí (như chữ in), text-reset đưa về màu kế thừa mặc định
.display-(1|2|3|4) : Sử dụng thiết lập tiêu đề lớn trong trang, có 4 kích thước như display-3
.lead : Làm nổi bật một đoạn văn (ví dụ tóm tắt nội dung)
.mark : Đánh dấu một đoạn văn
.small : Đánh dấu một đoạn văn có chữ nhỏ hơn
.blockquote : Tạo một hiện thị trích dẫn
.blockquote-footer :Tạo một hiện thị trích dẫn có ký hiệu --
.list-unstyled : Đánh dấu ul, li bỏ kiểu trình bày danh sách
.list-inline : Đánh dấu ul hiện thị dạng inline
.list-inline-item : Đánh dấu li hiện thị dạng inline float left

- Căn lề theo chiều đứng các phần tử :
.align-{baseline|top|middle|bottom|text-bottom|text-top}
Các lớp căn lề theo chiều đứng chỉ áp dụng cho các phần tủ inline, inline-block. inline-table và các cell trong bảng
align-* : * = {baseline, top, middle, bottom, text-top, text-bottom}

- Thiết lập margin và padding
Các lớp thiết lập margin là m{sides}-{size} hoặc m{sides}-{breakpoint}-{size}
Các lớp thiết lập padding là p{sides}-{size} hoặc p{sides}-{breakpoint}-{size}

sides thay bằng t|l|r|b|x|y tương ứng với top, left, right, bottom, left-right, top-bottom. Nếu sides để trống nghĩa là thiết lập cho cả bốn phía (ví dụ m-0, p-2)
sizes thay bằng các số 0 1 2 3 4 5 hoặc auto để thiết lập kích thước (0, 0.25, 0.5, 1, 1.5, 3) rem
breakpoint tương ứng với điểm chia màn hình sm, md, lg, xl hoặc để trống

- Thiết lập màu nền
bg-primary, bg-secondary, bg-success, bg-info, bg-warning, bg-danger, bg-light, bg-danger, bg-dark .

- Thiết lập thuộc tính display :  none, inline, inline-block, block, table, table-cell, table-row, flex, inline-flex
.d-{breakpoint}-{value} ví dụ .d-none, .d-sm-inline, .d-lg-flex...
Thiết lập hiện thị phần tử dùng .visible
Thiết lập ẩn phần tử dùng .invisible

- Thiết lập thuộc tính float :  left, right, none 
.float-{breakpoint}-{value} ví dụ .float-none, .float-sm-right, .float-lg-left...
Muốn hủy thuộc tính float của một phần tử dùng class clearfix

- Thiết lập thuộc tính position
Đó là các class: .position-(static|relative|absolute|fixed|sticky), .fixed-top, .fixed-bottom

- Thiết lập thuộc border
Cạnh được kẻ :
.border thiết lập kẻ viền cả bốn cạnh
.border-top thiết lập kẻ viền cạnh trên
.border-bottom thiết lập kẻ viền cạnh dưới
.border-left thiết lập kẻ viền cạnh trái
.border-right thiết lập kẻ viền cạnh phải

Màu đường kẻ thiết lập bằng các class: .border-(primary|secondary|success| danger|warning|info|light|dark|white)

Góc thiết lập bo tròn sử dụng các class:
.rounded bo tròn cả 4 góc
.rounded-(left|top|right|bottom) bo tròn 2 cạnh phía trái, trên, phải, dưới
.rounded-circle bán kính bo tròn thiết lập để biến hình vuông thành hình tròn
.rounded-0 hủy bo tròn các góc

- Đổ bóng hình hộp
.shadow đổ bóng cỡ trung bình
.shadow-sm đổ bóng cỡ nhỏ
.shadow-lg đổ bóng cỡ lớn
shadow-none bỏ đổ bóng

- Thiết lập chiều cao, chiều rộng
w-25 w-50 w-75 w-100 w-auto để thiết lập chiều rộng theo phần trăm của chiều rộng phần tử cha, auto là tự động co
mw-100 thiết lập thuộc tính max-width: 100%
h-25 h-50 h-75 h-100 h-auto để thiết lập chiều cao theo phần trăm của chiều cao phần tử cha, auto là tự động co
mh-100 thiết lập thuộc tính max-height: 100%

- Nhúng Video
Cách để nhúng Video đảm bảo tính năng responsive
<div class="embed-responsive embed-responsive-16by9">
    <iframe class="embed-responsive-item" 
        src="https://www.youtube.com/embed/xxxxx?rel=0" allowfullscreen></iframe>
</div>    

- FlexBox với Bootstrap : Ví dụ thêm breakpoint : .align-content-{values} hoặc .align-content-{breakpoint}-{values} 
+ Phần tử chứa : 
Kích hoạt có tính năng flexbox : 
d-flex .d-sm-flex .d-inline-flex .d-{breakpoint}-inline-flex

Thiết lập flex-wrap :
.flex-nowrap, .flex-wrap, .flex-reverse .flex-sm-nowrap, .flex-lg-wrap, .flex-md-reverse ...

Thiết lập hướng chính flex-direction :
.flex-row, .flex-column, .flex-column-reverse, .flex-row-reverse .flex-xs-row, .flex-sm-column, .flex-lg-column-reverse, .flex-md-row-reverse ...

Đẩy phần tử con theo hướng chính justify-content
.justify-content-* :* = {start, end, center, around, between}

Đẩy phần tử con theo hướng vuông góc align-items
.align-items-* :* = {stretch, center, baseline, around, between}

Căn chỉnh chi có nhiều hàng (cột) align-content
.align-content-{values} : Với {values} là start, end, center, around, stretch

+ Phần tử con :
Trôi theo hướng vuông góc align-self
.align-self-{values} values là: start, end, center, baseline, stretch

Phần tử con - Fill ép các phần tử con đó theo hướng chính kích thước sẽ bằng nhau
.flex-fill 

Mở rộng tối đa kích thước có thể có trong phần tử chữa
.flex-grow-1 

Đẩy phần tử bằng margin
.mr-auto .ml-auto .mb-auto .mt-auto

Đổi thứ tự hiện thị
order-0 đến order-12

4. Ứng dụng lớp .media của Bootstrap
Lớp .media trong Boostrap để tạo ra các đối tượng trực quan có cấu trúc lặp lại như danh sách các bài viết, danh sách bình luận, comment
Danh sách Media là tạo các Media đơn. 
Cách hay nhất là dùng chính ul, li với thiết lập li có lớp .media và thiết lập ul có lớp .list-unstyled (để loại bỏ kiểu list mặc định)

Media lồng nhau
Để tạo ra dạng lồng nhau, đơn giản trong .media-body này chứa một Media khác. 
Dạng này có thể dùng để tạo ra cấu trúc hiện thị bình luận, trả lời bình luận (comment) ...

5. Tạo breadcrumb với Bootstrap
Breadcrumb là một cấu trúc hiện thị đường dẫn, cho biết bạn đang ở đâu, trang nào trên webiste. 
Với Bootstrap xây dựng từ phần tử chứa <ul> <ol> với lớp là .breadcrumb, bên trong là các phần tử con <li> (bên trong chứa link <a>) với lớp .breadcrumb-item
Phần tử con hiện tại kích hoạt hãy cho thêm .active

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
    <li class="breadcrumb-item"><a href="#">Trang cấp 1</a></li>
    <li class="breadcrumb-item"><a href="#">Trang cấp 2</a></li>
    <li class="breadcrumb-item active" aria-current="page">Trang hiện tại</li>
</ol>

6. Thanh điều hướng phân trang Pagination trong Bootstrap
Sử dụng lớp .paginaton và lớp .page-item để tạo ra một thanh điều hướng các trang trong Bootstrap
Trong Bootstrap sử dụng phần tử chứa .pagination (<ul>) để tạo, bên trong các phần tử con .page-item (<li>). Trong <li> chứa link các trang con

Kích thước điều chỉnh to khi thêm .pagination-lg, nhỏ lại với pagination-sm
Do .pagination sử dụng kỹ thuật flexbox nên nó căn chỉnh nội dung bằng các lớp .justify-content-* (xem thêm flex)
Phần tử con .page-item nào muốn cho biết là ở hiện tại (kích hoạt) thì cho nó thêm .active
Phần tử con .page-item nào muốn vô hiêu bấm vào thì thêm .disabled.

7. Sử dụng badge tạo ra các nhãn lable trong Bootstrap
Sử dụng lớp .badge sau đó là các lớp định dạng .badge-* (.badge-primary, .badge-secondary ...) để tạo ra một Badge. 
Thường sử dụng .badge cho các phần tử hiện thị dạng inline như a, span
VD : <span class="badge badge-danger">99</span>

Nếu muốn các badge góc bo tròn hơn nữa thì thêm vào .badge-pill
Khi sử dụng .badge cho các link (phần tử <a> thì các link đó có hiệu ứng khi hover cho biết đang focus trên nó)

8. Tạo các nút bấm, nhóm nút bấm button trong Boostrap
Trong Bootstrap tạo ra các nút bấm bằng cách sử dụng lớp .btn theo sau là các lớp định dạng .btn-*.
Thông thường thì sử dụng phần tử HTML <button> để tạo nút bấm, tuy nhiên bạn có thể sử dụng bất kỳ phần tử nào như span, a, ...

Tạo ra nút bấm là .btn theo sau bởi các class .btn-primary .btn-secondary .btn-success .btn-danger .btn-warning .btn-info .btn-light .btn-dark .btn-link
Muốn có nút bấm lớn thêm vào .btn-lg hoặc thì là .btn-sm
Muốn nút bấm hiện thị dạng block thì thêm vào .btn-block
Muốn chuyển sang loại nút bấm mà không tô màu nền thì sử dụng .btn-outline-*

Nhóm nút bấm .btn-group .btn-group-vertical :
Để tạo ra một nhóm nút bấm, hiện thị trên một dòng đơn chỉ cần tạo ra phần tử .btn-group hoặc .btn-group-verticalnó bao bọc lấy các phần tử nút bấm .btn
Để điều chỉnh kích thước nhóm, có lớp .btn-group-lg .btn-group-sm. Nếu muốn nhóm các nút bố trí theo chiều ngang thì dùng đến .btn-group-vertical
Nếu có nhiều nhóm nút bấm, có thể cho chúng vào một phần tử .btn-toolbar để tạo thành thanh công cụ cho ứng dụng web

Trạng thái của nút bấm
Có thể thiết lập thêm cho nút bấm trạng thái là hiệu lực bằng cách thêm .active hoặc vô hiệu bằng cách thêm .disabled
Lớp .active và .disabled hay dùng với phần tử <a>

9. Sử dụng Jumbotron tạo box trình diễn lớn trong Bootstrap
.jumbotron để tạo ra một hộp, trong đó trình bày các nội dung vắn tắt nhưng quan trong, để lưu ý người dùng về nội dung nào đó
Nếu muốn bảng trình diễn này mở rộng độ rộng tối đa và không bo tròn các góc thêm vào .jumbotron-fluid và nội dung bên trong trình bày với một .container

Để Jumbotron trong Bootstrap ấn tượng có thể sử dụng các lớp trình bày kích thước lớn như .display-2 .btn-lg ...
Nghĩa từ Jumbotron: nó còn gọi là Jumbovision, là một màn hình lớn, đầu tiên phát triển bởi Sony và được sử dụng hiện thị thông tin ở các nhà thi đấu thể thao và những điểm hòa nhạc để hiện thị các thông tin quan trọng một sự kiện nào đó

10. Cơ bản về Nav xây dựng Tab trong Bootstrap
Tìm hiểu về Nav với phần tử .nav, .nav-item, .nav-link từ đó xây dựng nên HTML Tabs, Dùng các thuộc tính flex để điều chỉnh giao diện
<ul class="nav">
    <li class="nav-item">
        <a class="nav-link" href="#">Mục 1</a>
    </li>
</ul>

- Sử dụng JavaScript tạo Tabs với Nav

11. Tạo thanh Navbar trong Bootstrap
NavBar xây dựng từ .navbar kết hợp với .navbar-expand{-sm|-md|-lg|-xl} cộng với thiết lập dạng sáng tối là .navbar-dark hoặc .navbar-light cuối cùng là nền .bg-* hoặc tự thiết lập nền background với màu tùy chọn.
Để thiết lập vị trí của Navbar có thể dùng các lớp position ví dụ .fixed-top, .fixed-bottom
Phần tử .navbar-toggler Ở trên có một <button≶ thiết lập lớp .navbar-toggler để tạo ra một Toggler Button, nút bấm này chỉ xuất hiện khi màn hình dưới kích thước thiết lập bởi .navbar-expand{-sm|-md|-lg|-xl}, khi bấm vào nó nó sẽ mở rộng Navbar đổ xuống để xuất hiện các thành phần bị ẩn. 
Đảm bảo có các thuộc tính data-toggle="collapse" aria-expanded="false" và chú ý là data-target="#my-nav-bar" aria-controls="my-nav-bar" với my-nav-bar là id của phần tử chứa các phần nội dung trên NavBar (nút bấm, menu, form)

12. Sử dụng Card tạo box chứa nội dung trong Bootstrap
Cách sử dụng .card tạo ra các box chứa nội dung có tùy biến Footer, Header, cách nhóm các Card lại với card-group, card-deck và card-colunms
Phần tử đầu tiên trong .card là phần hiện thị nội dung chính, tạo ra từ .card-body có thể lưu ý các tùy chọn phần tử trong .card-body:
.card-title để tạo tiêu đề chính
.card-subtitle để tạo tiêu đề phụ
.card-text để chứa nội dung văn bản
.card-link dùng cho phần tử liên kết a

Hình ảnh Muốn cho hình ảnh vào Card thì dùng
.card-img-top nếu ảnh phía trên (ảnh sẽ bo tròn 2 góc phía trên cho vừa với Card)
.card-img-bottom nếu ảnh phía dưới
.card-img rounded-0 nếu ảnh ở khoảng giữa

Thêm List group có thể thêm vào .card các List Group để có được danh dách liệt kê bên trong
Header/Footer hêm vào .card một Hearder thì dùng .card-header, còn thêm Footer dùng .card-footer. 

Để nhanh chóng nhóm một số Card lại với nhau hãy sử dụng phần tử chứa .card-group,
Cũng làm nhòm lại với .card-deck ý nghĩa như .card-group nhưng các Card không sát nhau mà cách nhau một khoảng

Nếu các Card muốn nhóm lại và hiện thị dạng cột, hết cột này đến cột khác thì dùng đến .card-columns

13. Sử dụng Collapse ẩn hiện nội dung HTML trong Bootstrap
Sử dụng JS và các lớp liên quan trong Bootstrap để tạo ra tính năng bật ẩn, hiện nội dung HTML, cách tạo ra một accordion
.collapse, .collapsing, .collapse.show

Cần có một phần tử bấm vào nó để kích hoạt phần tử nội dung ẩn/hiện. 
Phần tử HTML này sử dụng bất kỳ loại nào cũng được, nhưng thường dùng phần tử <a> hoặc <button>. 
Cần thiết lập cho phần tử này thuộc tính data-toggle="collapse" sau đó liên kết nó với phần tử cần ẩn hiện thông qua thuộc tính data-target="id hoặc lớp cần ẩn/hiện". 
Nếu dùng <a> thì có thể dùng href="id cần ẩn/hiện"

Sử dụng accordion - giao diện ẩn/hiện từng nội dung trong tập hợp

14. Tạo các Menu đổ xuống DropDown trong Bootstrap
Một phần tử chứa .dropdown bên trong chứa 2 thành phần phía sau
Phần tử con để bấm vào: phần tử này thiết lập thuộc tính data-toggle="dropdown", thường tạo ra nút bấm cho phần tử này, nếu muốn có thêm biểu tượng mũi tên đổ xuống thêm vào .dropdown-toggle, thường tạo ra các nút bấm cho phần tử này
Phần tử .dropdown-menu bên trong chứa các phần tử con .dropdown-item, nếu tạo đường kẻ thì cho thêm phần tử .dropdown-divider, các phần tử con kích hoạt cho thêm .active, không hoạt động cho thêm .disabled. Ngoài ra có thể cho thêm các loại phần tử con bất kỳ với các lớp đã biết của Bootstrap
Nếu muốn căn thẳng cảnh phải với phần tử bấm thì .dropdown-menu cho thêm . dropdown-menu-right

Thay vì sử dụng phần tử .dropdown có thể chuyển sang sử dụng phần tử .btn-group (Xem phần Nút bấm) để tạo ra loại Nút bấm chia làm 2 phần, phần mũi tên bấm vào đổ xuống một Menu .dropdown-menu. 
Ngoài ra phần nút bấm để đổ menu cho thêm lớp .dropdown-toggle-split
Để tạo ra mũi tên hướng lên, và Menu xuất hiện phía trên Nút bấm thì ở phần tử gốc cho thêm .dropup. Ngoài ra còn có .dropleft, .dropright

15. Tạo Alert trong Bootstrap
Tạo ra Alert bằng lớp .alert và định dạng Box với một trong các lớp .alert-{primary|secondary|success|warning|info|light|dark}

Thêm nút Close
Có thể kích hoạt JS để bấm vào một nút close đóng lại Alert bằng cách cho thêm thiết lập lớp .alert-dismissible mặc định hiện thị với lớp .fade .show. Sau đó bên trong cho thêm một nút bấm .close gán cho nó thuộc tính data-dismiss="alert"

Thêm tiêu đề
Dùng lớp .alert-heading để tạo tiêu đề

15. Tạo các Slide trong Bootstrap với carousel
Carousel giúp tạo ra các slide trình diễn, mỗi slide có thể hiện thị nội dung bất kỳ (thông thường là các hình ảnh và các dòng chữ chú thích cho hình ảnh đó).
Trước tiên cần tạo ra một phần tử chứa .carousel có gán cho nó một id ví dụ mycarousel và có thuộc tính data-ride="carousel". 
Mặc định khi lật slide nó sẽ xuất hiện ngay lập tức, nếu muốn nó trượt thì thêm vào .slide, nếu muốn thêm hiệu ứng mờ dần thêm vào .carousel-fade
Các slide xây dựng từ .carousel-item chúng nằm trong .carousel-inner. Nếu slide nào kích hoạt cho thêm .active. Bên trong Slide thường chứa một hình ảnh với thiết lập class="d-block w-100"
Một Slide có thể thêm phần chú thích bằng phần tử .carousel-caption

16. Tạo List Group trong Bootstrap
Tạo List Group để hiện thị danh sách các mục bằng cách sử dụng .list-group các phần tử con sử dụng .list-group-item. 
Hoặc xây dựng các item bằng <a>
Các tùy chọn với List Group
.active cho thêm vào item để kích hoạt hoạt động.
.disabled cho thêm vào item thì vô hiệu hóa item
.list-group-flush cho thêm vào phần tử gốc sẽ loại bỏ một số border của phần tử nhằm mục đích sử dụng List Group trong các thành phần khác, ví dụ đặt trong Card
.group-item-{primary|secondary|success|danger|warning|info|light|dark} thêm vào item để tùy biến về nền
.list-group-item-action cho thêm vào item để kích hoạt nó như là một điều khiển bấm vào để thực hiện một hành động nào đó

17. Tạo ra Popover với Boostrap
Popover là một hộp thoại nhỏ hiện thị bên cạnh cạnh đối tượng được bấm vào. 
Popover hoạt động căn cứ vào JS, nó lấy dữ liệu từ thuộc tính của phần tử bấm vào.
Hãy cho thêm đoạn JS sau khi trang được tải
<script>
    $(function () {
       $('[data-toggle="popover"]').popover()
    })
</script>
Với đoạn JS trên thì bất kỳ phần tử nào có thuộc tính data-toggle="popover" nó sẽ được xem xét để hiện thị Popover
Phần tử nào muốn hiện thị Popover thì cho nó thêm thuộc tính data-toggle="popover", thuộc tính title="" là tiêu đề của Popover, thuộc tính data-content="" là nội dung mà Popover hiện thị

Nếu muốn Popover tự động đóng lại khi bấm chuột bên ngoài khi Popover hiện thị cho thêm vào thuộc tính data-trigger="focus"

18. Tạo thanh progress với Bootstrap
Một phần tử chứa .progress độ rộng của nó cho biết giá trị lớn nhất của quá trình.
Bên trong .progress chứa phần tử .progress-bar cho biết giá trị hiện tại, nó là phần tử hiện thị dạng inline, nên cần thiết lập độ rộng cho nó (dùng inline CSS). 
Để cho biết giá trị hiện tại dùng thuộc tính aria-valuenow="", giá trị lớn nhất aria-valuemax="", giá trị nhỏ nhất aria-valuemin=""
Tùy biến Progress bằng cách thiết lập nền cho .progress-bar với các màu nền .bg-*, chiều cao thì thiết lập tại .progress bằng CSS phù hợp
Như vậy mỗi khi muốn thay đổi progress cần thiết độ rộng cho progress-bar căn cứ các thuộc tính của nó, có thể làm việc này thông qua JS

19. Tạo Tooltip với Bootstrap
Tạo tooltip, box nhỏ xuất hiện khi chuột di chuyển trên phần tử, ẩn khi chuột ra khỏi phần tử
Hãy cho thêm đoạn JS sau khi trang được tải
<script>
    $(function () {
       $('[data-toggle="tooltip"]').tooltip()
    })
</script>
Với đoạn JS trên thì bất kỳ phần tử nào có thuộc tính data-toggle="tooltip" nó sẽ được xem xét để hiện thị Tooltip khi chuột ở phía trên phần tử đó
Phần tử nào muốn hiện thị tooltip thì cho nó thêm thuộc tính data-toggle="tooltip", thuộc tính title="" là nội dung mà Tooltip hiện thị, cho thêm data-placement="top" nếu muốn hiện thị phía trên, tương tự có các loại data-placement="bottom", data-placement="left", data-placement="right"


20. Tạo các hộp thoại Modal trong Bootstrap
Các hộp thoại Modal được tạo ra với cấu trúc sau, chia làm 3 phần phần Header, Body và Footer
Với mã trên có id của hộp thoại là #dialog1, mặc định hộp thoại ẩn, để kích hoạt hiện thị có thể làm như sau:

Mở hộp thoại bằng JS
Khi muốn bật hộp thoại trên, chạy code sau:
<script>
    $('#dialog1').modal('show')
</script>
Khai báo phần tử kích hoạt hộp thoại

Có thể khai báo các nút bấm với thông số như sau để thư viện Bootstrap tự chạy JS và mở hộp thoại khi nhấn vào nút bấm
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#dialog1">
    Mở hộp thoại
</button>

Để điều chỉnh cỡ hộp thoại: cho thêm vào .modal-dialog các lớp: .modal-lg tạo hộp thoại lớn, .modal-sm tạo hộp thoại nhỏ
Một số hàm JS cho Modal : 
.modal('show') hiện thị hộp thoại
.modal('hide') ẩn hộp thoại

21. Xây dựng HTML Form với Bootstrap
Sử dụng các lớp tiện ích để tạo ra giao diện form với các lớp như form-group, form-control, form-row

.form-group Tạo 1 dòng form chứa phần tử dùng .form-group
.form-control (.form-control-lg loại lớn, .form-control-sm loại nhỏ) lớp dùng cho các phần tử form nhập dữ liệu Text <input> <select> <textarea>
.form-control-file lớp dùng cho <input> chọn file
.form-control-plaintext trình bày như là text, thường dùng nó cùng thuộc tính readonly
.col-form-label (.col-form-label-lg lớn, .col-form-label-sm nhỏ) thêm vào <label> để thiết lập nhãn ở giữa theo phương đứng, hưu ích khi bố trí nhãn và điều khiển trên một hàng.
Trong form có thể chia lưới .form-group bằng .row (hoặc .form-row) và .col-*
.form-check (thay cho .form-group) dùng cho khối phần tử checkbox, radio. Nếu muốn chuyển dạng inline thêm vào .form-check-inline
.form-check-input (thay cho .form-control) dùng cho checkbox, radio
.form-check-label thiết lập label khi dùng radio, checkbox
.valid-feedback .invalid-feedback thiết lập box hiện thị thông báo lỗi